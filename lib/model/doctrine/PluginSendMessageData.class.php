<?php

/**
 * PluginSendMessageData
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    opMessagePlugin
 * @subpackage form
 * @author     Shingo Yamada <s.yamada@tejimaya.com>
 */
abstract class PluginSendMessageData extends BaseSendMessageData
{
  protected 
    $previous = null,
    $next = null;

  /**
   * メッセージが本人送信のものかどうか確認する
   * @param  $member_id
   * @return boolean
   */
  public function getIsSender($memberId = null)
  { 
    if (is_null($memberId))
    {
      $memberId = sfContext::getInstance()->getUser()->getMemberId();
    }
    if ($this->getMemberId() == $memberId)
    {
      return true;
    }
    else
    {
      return false;
    }
  }

  /**
   * メッセージが本人宛かどうか確認する
   * @param  $member_id
   * @return int
   */
  public function getIsReceiver($member_id)
  { 
    $message = Doctrine::getTable('MessageSendList')->getMessageByReferences($member_id, $this->getId());
    if ($message)
    {
      return 1;
    }
    else
    {
      return 0;
    }
  }

  /**
   * 宛先リストを取得する
   * @return array
   */
  public function getSendList()
  {
    $objs = Doctrine::getTable('MessageSendList')->getMessageSendList($this->getId());

    return $objs;
  }

  /**
   * 宛先(1件)を取得する
   * @return Member
   */
  public function getSendTo()
  {
    $objs = $this->getSendList();
    if ($cnt = count($objs) == 0) return null;

    return $objs[0]->getMember();
  }

  /**
   * 添付ファイルを取得する（idの昇順）
   * @return array
   */
  public function getMessageFiles(Doctrine_Query $q)
  {
    if (is_null($q))
    {
      $a = Doctrine::getTable('MessageFile')
        ->orderBy('id ASCEND');
    }
    $files = parent::getMessageFile($q);

    return $files;
  }
}
