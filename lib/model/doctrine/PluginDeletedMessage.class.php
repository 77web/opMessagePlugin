<?php

/**
 * PluginDeletedMessage
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    OpenPNE
 * @subpackage opMessagePlugin
 * @author     shingo Yamada <s.yamada@tejimaya.com>
 */
abstract class PluginDeletedMessage extends BaseDeletedMessage
{
  protected 
    $message = null;

  /**
   * 宛先/送信先を取得する
   * @return Member
   */
  public function getSendFromOrTo()
  {
    if ($this->getMessageId()) {
      if (!$this->message) {
        $this->message = Doctrine::getTable('SendMessageData')->find($this->getMessageId());
      }
      if ($this->message) {
        return $this->message->getSendTo();
      }
    } else if ($this->getMessageSendListId()) {
      if (!$this->message) {
        $this->message = Doctrine::getTable('MessageSendList')->find($this->getMessageSendListId());
      }
      if ($this->message) {
        return $this->message->getSendFrom();
      }
    }
    return null;
  }
  
  /**
   * 件名を取得する
   * @return str
   */
  public function getSubject()
  {
    if ($this->getMessageId()) {
      if (!$this->message) {
        $this->message = Doctrine::getTable('SendMessageData')->find($this->getMessageId());
      }
      if ($this->message) {
        return $this->message->getSubject();
      }
    } else if ($this->getMessageSendListId()) {
      if (!$this->message) {
        $this->message = Doctrine::getTable('MessageSendList')->find($this->getMessageSendListId());
      }
      if ($this->message) {
        return $this->message->getSendMessageData()->getSubject();
      }
    }
    return null;
  }
  
  /**
   * アイコンを取得する
   * @return str
   */
  public function getIcon()
  {
    if ($this->getMessageId()) {
      if (!$this->message) {
        $this->message = Doctrine::getTable('SendMessageData')->find($this->getMessageId());
      }
      if ($this->message) {
        if ($this->message->getIsSend() == 1) {
          return "icon_mail_3.gif";
        } else {
          return "icon_mail_1.gif";
        }
      }
    } else if ($this->getMessageSendListId()) {
      $this->message = Doctrine::getTable('MessageSendList')->find($this->getMessageSendListId());
      if ($this->message) {
        return "icon_mail_2.gif";
      }
    }
    return null;
  }
  
  /**
   * アイコン Altを取得する
   * @return str
   */
  public function getIconAlt()
  {
    if ($this->getMessageId()) {
      if (!$this->message) {
        $this->message = Doctrine::getTable('SendMessageData')->find($this->getMessageId());
      }
      if ($this->message) {
        if ($this->message->getIsSend() == 1) {
          return __('Sent Message');
        } else {
          return __('Drafts');
        }
      }
    } else if ($this->getMessageSendListId()) {
      $this->message = Doctrine::getTable('MessageSendList')->find($this->getMessageSendListId());
      if ($this->message) {
        return __('Inbox');
      }
    }
    return null;
  }
  
  /**
   * get the message's id to read message
   *
   * @return integer
   */
  public function getViewMessageId()
  {
    if ($this->getMessageId())
    {
      if (!$this->message)
      {
        $this->message = Doctrine::getTable('SendMessageData')->find($this->getMessageId());
      }
    }
    else if ($this->getMessageSendListId())
    {
      $this->message = Doctrine::getTable('MessageSendList')->find($this->getMessageSendListId());
    }
    if ($this->message)
    {
      return $this->message->getId();
    }
    return null;
  }

  /**
   * restore message 
   * @param int $message_id
   * @return boolean 
   */
  public function restoreMessage($message_id)
  {
    $deleted_message = Doctrine::getTable('DeletedMessage')->find($message_id);
    if (!$deleted_message) {
      return false;
    }
    if ($deleted_message->getMessageSendListId() != null) {
      $message = Doctrine::getTable('MessageSendList')->find($this->getMessageSendListId());
    } else if ($deleted_message->getMessageId() != null) {
      $message = Doctrine::getTable('SendMessageData')->find($this->getMessageId());
    }
    if (!$message) {
      return false;
    }
    $deleted_message->delete();
    $message->setIsDeleted(0);
    $message->save();
    return true;
  }
}
